/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   print.c                                            :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: zadrien <zadrien@student.42.fr>            +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2020/01/26 13:45:39 by zadrien           #+#    #+#             */
/*   Updated: 2020/01/26 13:46:28 by zadrien          ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "otool.h"

void	print_section_saved64(t_lst *lst)
{
	uint8_t		i;
	t_lst		*tmp;
	t_section	*sect;
	struct	section_64	*s;
	i = 0;
	if (!lst)
		return ;
	tmp = lst;
	printf("---[Number of saved section: %zu]---\n", tmp->nbr);
	sect = tmp->ptr;
	while(i < lst->nbr) {
		s = sect->ptr;
		printf("\t---Section---\n");
		printf("%p\n", sect->ptr);		
		printf("segname: %s\n", ((struct section_64*)(sect->ptr))->segname);
		printf("seectname: %s\n", s->sectname);
		sect++;
		i++;
	}
}

void	print_section_saved(t_lst *lst)
{
	uint8_t		i;
	t_lst		*tmp;
	t_section	*sect;
	struct	section	*s;
	i = 0;
	if (!lst)
		return ;
	tmp = lst;
	printf("---[Number of saved section: %zu]---\n", tmp->nbr);
	sect = tmp->ptr;
	while(i < lst->nbr) {
		s = (struct section*)sect->ptr;
		printf("\t---Section---\n");
		printf("segname: %s\n", s->segname);
		printf("seectname: %s\n", s->sectname);
		sect++;
	}
}

void	print64(t_ofile *ofile, struct section_64 *section)
{
	uint64_t			i;
	char				*str;
	char		 		*addr;

	i = 0;
	addr = (char*)section->addr;
	str = (void*)ofile->ptr + section->offset;
	print_section(section);
	if (!singleton(0)) {
		ft_putstr(ofile->name);
		ft_putendl(":");
	}
	while (i < section->size)
	{
		if (ofile->swap && i % 4 == 0 && i > 0)
			ft_putchar(' ');
		if  (i % 16 == 0) {
			if (i > 0)
				ft_putendl("");
			ft_puthex((unsigned long long)addr, 16, 0);
			ft_putchar('\t');
		}
		ft_puthex((uint8_t)(*str), 2, 0);
		if (!ofile->swap)
		ft_putchar(' ');
		addr++;
		str++;
		if (!str)
			break ;
		i++;

	}
	ft_putchar('\n');
}

void	print32(t_ofile *ofile, struct section *section)
{
	char			*str;
	int				i;
	unsigned long 	addr;

	i = 0;
	addr = section->addr;
	str = (void*)ofile->ptr + section->offset;
	while (i < (int)section->size)
	{
		if (ofile->swap && i % 4 == 0 && i > 0)
			ft_putchar(' ');
		if  (i % 16 == 0) {
			if (i > 0)
				ft_putendl("");
			ft_puthex((unsigned long long)addr, 8, 0);
			ft_putchar('\t');
		}
		ft_puthex((unsigned long long)(*str), 2, 0);
		if (!ofile->swap)
			ft_putchar(' ');
		addr++;
		str++;
		i++;
	}
	ft_putchar('\n');
}
